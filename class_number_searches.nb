(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     52900,       1141]
NotebookOptionsPosition[     50923,       1103]
NotebookOutlinePosition[     51336,       1121]
CellTagsIndexPosition[     51293,       1118]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Code to find all the matrix representations of equivalence classes in L with \
a certain trace\
\>", "Section",
 CellChangeTimes->{{3.7936182018321543`*^9, 3.793618208554514*^9}, {
  3.805444229072956*^9, 
  3.805444256327557*^9}},ExpressionUUID->"043306a0-9781-4e72-aa1f-\
bbeea750a905"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\</Users/loganbrooke/Desktop/forgithub\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.805452213176868*^9, 
  3.805452241774872*^9}},ExpressionUUID->"02280d87-8050-44ff-a6b5-\
409269d79bd3"],

Cell[BoxData["\<\"/Users/loganbrooke/Desktop/forgithub\"\>"], "Output",
 CellChangeTimes->{{3.80545224631248*^9, 
  3.805452274572463*^9}},ExpressionUUID->"168b84c5-5642-45ff-af54-\
4fde66f84091"]
}, Open  ]],

Cell["\<\
This function finds all 2-cyclic shifts of a given Continued Fraction \
representation\
\>", "Text",
 CellChangeTimes->{{3.805445671411748*^9, 3.80544571630641*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f26a6b3a-8fa8-43b4-8e4b-4733593ebc37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CFPermutations", "[", "listtobePermuated_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lists", "=", "listtobePermuated"}], ",", " ", "max", ",", " ", 
      "loop", ",", " ", "permutations"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"permutations", "=", 
      RowBox[{"{", "lists", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "If", " ", "the", " ", "length", " ", "is", " ", "less", " ", "than", 
        " ", "3"}], ",", " ", 
       RowBox[{
       "we", " ", "have", " ", "all", " ", "of", " ", "the", " ", 
        "permutations", " ", "we", " ", "need"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "lists", "]"}], "\[GreaterEqual]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"max", "=", 
         RowBox[{"Length", "[", "lists", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{
         "even", " ", "length", " ", "CF", " ", "means", " ", "we", " ", 
          "only", " ", "have", " ", "to", " ", "loop", " ", "through", " ", 
          "half", " ", "of", " ", "it", " ", "to", " ", "avoid", " ", 
          "hitting", " ", "duplicates"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"max", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"max", "=", 
           RowBox[{"max", "/", "2"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"loop", "=", "1"}], ",", 
          RowBox[{"loop", "\[LessEqual]", "max"}], ",", 
          RowBox[{"loop", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"permutations", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"permutations", "[", 
                 RowBox[{"[", "loop", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"3", ";;", 
                  RowBox[{"Length", "[", "lists", "]"}]}], "]"}], "]"}], ",", 
               
               RowBox[{"permutations", "[", 
                RowBox[{"[", 
                 RowBox[{"loop", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"permutations", "[", 
                RowBox[{"[", 
                 RowBox[{"loop", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "returns", " ", "a", " ", "list", " ", "of", " ", "all", " ", "of", 
        " ", "the", " ", "2"}], "-", 
       RowBox[{"shifts", " ", "allowed"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", "permutations", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7894769454683723`*^9, 3.789477001799818*^9}, 
   3.789477480165745*^9, {3.789733958360406*^9, 3.789733976701756*^9}, {
   3.789734033197613*^9, 3.7897341045553207`*^9}, {3.789735242633627*^9, 
   3.78973524272635*^9}, {3.789736486809361*^9, 3.789736487111145*^9}, {
   3.7897369623821487`*^9, 3.789737007497324*^9}, {3.78973705909083*^9, 
   3.7897370771601477`*^9}, {3.789737121473412*^9, 3.789737121736156*^9}, {
   3.789744232000175*^9, 3.789744232539752*^9}, {3.789751906701106*^9, 
   3.789751909659257*^9}, {3.78975346485968*^9, 3.789753472233296*^9}, {
   3.79034248723211*^9, 3.79034250706393*^9}, {3.791817881114416*^9, 
   3.7918178933916492`*^9}, {3.791817983785758*^9, 3.7918180484933662`*^9}, {
   3.7918180798986998`*^9, 3.791818102651276*^9}, {3.7918190115766993`*^9, 
   3.791819021177244*^9}, {3.791819127212981*^9, 3.791819151489273*^9}, {
   3.791819309718728*^9, 3.791819310682021*^9}, {3.791909155378254*^9, 
   3.791909183641798*^9}, 3.795801297688779*^9, 3.795801403490313*^9, {
   3.8054452643749657`*^9, 3.805445331825726*^9}, {3.8054454106374073`*^9, 
   3.805445466919703*^9}, {3.805445521856675*^9, 3.805445657335495*^9}, {
   3.805446288420594*^9, 
   3.8054463007863407`*^9}},ExpressionUUID->"c17f2649-9b54-4fe2-aa76-\
06106aee6ffb"],

Cell["\<\
matrixA and matrixB are the operation of  A^n and B^n on a point\
\>", "Text",
 CellChangeTimes->{{3.805444293915407*^9, 3.805444304980526*^9}, {
  3.8054443357068253`*^9, 3.80544435352985*^9}, {3.805446336320224*^9, 
  3.8054463499538107`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e6c32250-c33d-4cf2-bcc9-114af72ea00c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrixA", "[", 
   RowBox[{"points_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"points", "+", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "n"}], ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixB", "[", 
   RowBox[{"points_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"ReIm", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"points", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"I", " ", 
       RowBox[{"points", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"points", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", 
         RowBox[{"I", " ", 
          RowBox[{"points", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "+", "1"}], ")"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.78950935180651*^9, 3.7895094424281597`*^9}, 
   3.789509790027192*^9, {3.789731038376257*^9, 3.789731058758312*^9}, {
   3.7957736475786333`*^9, 3.795773682510316*^9}, {3.795773749115006*^9, 
   3.795773770774395*^9}, 3.795773979790462*^9, {3.805444286952642*^9, 
   3.805444287790275*^9}, {3.805446348830784*^9, 
   3.805446352892214*^9}},ExpressionUUID->"760ab3ba-6b06-4c91-aece-\
36365a14d6ad"],

Cell["\<\
This function finds 1 rep from each conjugacy class in L with trace t with \
the smallest length.  \
\>", "Text",
 CellChangeTimes->{{3.8054443815244904`*^9, 3.805444446276229*^9}, {
   3.805447487858989*^9, 3.805447576846057*^9}, 3.805448448028969*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"88635891-aa1f-4ed4-87f9-31c566fa1550"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BQF", "[", "traceSearch_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"trace", "=", "traceSearch"}], ",", " ", 
      RowBox[{"classreps", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"cfreps", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"classrepsDecomp", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "Dis", ",", " ", "sqrtDiscriminant", 
      ",", " ", "possibleB", ",", " ", "loop1", ",", " ", "theB", ",", 
      "almostC", ",", " ", "almostA", ",", " ", "possibleA", ",", " ", 
      "loop2", ",", " ", "theA", ",", " ", "theMatrix", ",", " ", "makeit", 
      ",", " ", "cyclicrep", ",", " ", "setofShifts", ",", " ", "lengthsofIt",
       ",", " ", "searching", ",", " ", "pos", ",", " ", "lofit"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Discriminant", " ", "of", " ", "the", " ", "Binary", " ", "Quadradic", 
      " ", "Form"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Dis", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"trace", "^", "2"}], "-", "4"}], ")"}], "/", "64"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sqrtDiscriminant", "=", 
      RowBox[{"Sqrt", "[", "Dis", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "sqrtDiscriminant", "]"}], "\[GreaterEqual]", 
        "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"possibleB", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"-", "b"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", "1", ",", " ", 
             RowBox[{"Floor", "[", "sqrtDiscriminant", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Loop", " ", "through", " ", "the", " ", "possible", " ", 
          RowBox[{"B", "'"}], "s", " ", "that", " ", "have", " ", "the", " ", 
          "proper", " ", "congruences"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"loop1", "=", "1"}], ",", " ", 
          RowBox[{"loop1", "\[LessEqual]", 
           RowBox[{"Length", "[", "possibleB", "]"}]}], ",", 
          RowBox[{"loop1", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"theB", "=", 
            RowBox[{"possibleB", "[", 
             RowBox[{"[", "loop1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"theB", "^", "2"}], "-", "Dis"}], ",", "4"}], "]"}], 
              "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"almostC", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"theB", "^", "2"}], "-", "Dis"}], ")"}], "/", 
                "4"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ceiling", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"sqrtDiscriminant", "+", "theB"}], ")"}], "/", 
                   "2"}], "]"}], "\[LessEqual]", 
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"sqrtDiscriminant", "-", "theB"}], ")"}], "/", 
                   "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Loop", " ", "through", " ", "the", " ", "possible", " ", 
                  RowBox[{"A", "'"}], "s", " ", "that", " ", "are", " ", "of",
                   " ", "the", " ", "correct", " ", "form"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"almostA", "=", 
                  RowBox[{"Divisors", "[", "almostC", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"possibleA", "=", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"sqrtDiscriminant", "+", "theB"}], ")"}], "/", 
                    "2"}], "]"}], ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"sqrtDiscriminant", "-", "theB"}], ")"}], "/", 
                    "2"}], "]"}]}], "}"}]}], "]"}], ",", "almostA"}], "]"}]}],
                  ";", "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"loop2", "=", "1"}], ",", " ", 
                   RowBox[{"loop2", "\[LessEqual]", 
                    RowBox[{"Length", "[", "possibleA", "]"}]}], ",", 
                   RowBox[{"loop2", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"theA", "=", 
                    RowBox[{"possibleA", "[", 
                    RowBox[{"[", "loop2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"theMatrix", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"trace", "-", 
                    RowBox[{"8", "*", "theB"}]}], ")"}], "/", "2"}], ",", 
                    RowBox[{
                    RowBox[{"-", "8"}], "*", 
                    RowBox[{"almostC", "/", "theA"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"8", "*", "theA"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"trace", "+", 
                    RowBox[{"8", "*", "theB"}]}], ")"}], "/", "2"}]}], 
                    "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "create", " ", "the", " ", "continued", " ", "fraction"}],
                     ",", " ", 
                    RowBox[{
                    "then", " ", "make", " ", "it", " ", "look", " ", 
                    "better", " ", "than", " ", "how", " ", "mathematica", 
                    " ", "always", " ", "returns", " ", "it"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"makeit", "=", 
                    RowBox[{"ContinuedFraction", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "theB"}], "+", "sqrtDiscriminant"}], ")"}], 
                    "/", "2"}], "/", "theA"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"cyclicrep", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"makeit", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"makeit", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"makeit", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", "1"}]}], 
                    "]"}], "]"}]}], "}"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"setofShifts", "=", 
                    RowBox[{"CFPermutations", "[", "cyclicrep", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"lengthsofIt", "=", 
                    RowBox[{"Decomposition", "[", "theMatrix", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Searchs", " ", "to", " ", "see", " ", "if", " ", "the", 
                    " ", "representation", " ", "of", " ", "the", " ", 
                    "conjugacy", " ", "class", " ", "that", " ", "we", " ", 
                    "just", " ", "found"}], ",", " ", 
                    RowBox[{
                    "was", " ", "already", " ", "added", " ", "to", " ", 
                    "the", " ", "list"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"searching", "=", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"setofShifts", ",", "cfreps"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "searching", "]"}], "\[Equal]", 
                    "0"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{"it", " ", 
                    RowBox[{"wasn", "'"}], "t", " ", "already", " ", "in", 
                    " ", "the", " ", "list", " ", "so", " ", "add", " ", 
                    "it"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"cfreps", ",", "cyclicrep"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"classrepsDecomp", ",", "lengthsofIt"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"classreps", ",", "theMatrix"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "we", " ", "want", " ", "to", " ", "conjugate", " ", 
                    "the", " ", "matrix", " ", "to", " ", "force", " ", "its",
                     " ", "decomposition", " ", "to", " ", "start", " ", 
                    "with", " ", "an", " ", "A"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"classreps", ",", 
                    RowBox[{
                    RowBox[{"Inverse", "[", 
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], ".", "theMatrix", 
                    ".", 
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], "]"}]}], ",",
                     "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"pos", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{"cfreps", ",", 
                    RowBox[{"searching", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"lofit", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lofit", "<", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"classrepsDecomp", "[", 
                    RowBox[{"[", "pos", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "is", " ", "a", " ", "new", " ", "smaller", 
                    " ", "representative", " ", "and", " ", "so", " ", "we", 
                    " ", "replace", " ", "it", " ", "in", " ", "the", " ", 
                    "old", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cfreps", "[", 
                    RowBox[{"[", "pos", "]"}], "]"}], "=", "cyclicrep"}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"classrepsDecomp", "[", 
                    RowBox[{"[", "pos", "]"}], "]"}], "=", "lengthsofIt"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"classreps", "[", 
                    RowBox[{"[", "pos", "]"}], "]"}], "=", "theMatrix"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "we", " ", "want", " ", "to", " ", "conjugate", " ", 
                    "the", " ", "matrix", " ", "to", " ", "force", " ", "its",
                     " ", "decomposition", " ", "to", " ", "start", " ", 
                    "with", " ", "an", " ", "A"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"classreps", "[", 
                    RowBox[{"[", "pos", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"Inverse", "[", 
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], ".", "theMatrix", 
                    ".", 
                    RowBox[{"lengthsofIt", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}]}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"classreps", ",", "classrepsDecomp"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.789474259060794*^9, 3.789474295360681*^9}, {
   3.789474335152113*^9, 3.78947440171462*^9}, {3.78947444374052*^9, 
   3.789474617197666*^9}, {3.7894746645825567`*^9, 3.789474840915876*^9}, {
   3.789474901249358*^9, 3.789474907849524*^9}, {3.7894749606388187`*^9, 
   3.7894750746146593`*^9}, {3.7894751161086206`*^9, 3.789475388419804*^9}, {
   3.7894754664838047`*^9, 3.789475894515169*^9}, {3.789475928817341*^9, 
   3.78947599319591*^9}, {3.7894761041198273`*^9, 3.789476152548624*^9}, {
   3.7894761859732447`*^9, 3.7894762555517073`*^9}, {3.7894764109233007`*^9, 
   3.789476429524604*^9}, {3.78947710034687*^9, 3.789477177409671*^9}, {
   3.7894773402264423`*^9, 3.789477347208469*^9}, 3.7894774316869497`*^9, {
   3.789477493429481*^9, 3.789477494136138*^9}, {3.7894776181931467`*^9, 
   3.789477636705812*^9}, {3.7897310962528543`*^9, 3.789731186453702*^9}, {
   3.789731228231244*^9, 3.7897312894763613`*^9}, {3.7897329660124702`*^9, 
   3.789732996136764*^9}, {3.789733027098495*^9, 3.789733061687015*^9}, {
   3.789733091975423*^9, 3.78973329135283*^9}, {3.789733533273781*^9, 
   3.789733533415118*^9}, {3.789733565888232*^9, 3.789733575894956*^9}, {
   3.789733608092741*^9, 3.789733655230857*^9}, {3.7897444151750393`*^9, 
   3.7897444348725843`*^9}, {3.789744472454007*^9, 3.789744510307274*^9}, {
   3.789744546417987*^9, 3.789744575416943*^9}, {3.789744717561933*^9, 
   3.7897448207893047`*^9}, {3.789744945294544*^9, 3.789744969624917*^9}, {
   3.78974500967037*^9, 3.7897450123361597`*^9}, {3.78974504735189*^9, 
   3.78974508651854*^9}, {3.78974514581427*^9, 3.7897451497168217`*^9}, {
   3.789745305479649*^9, 3.7897453194529247`*^9}, 3.789745705748559*^9, {
   3.789751047682729*^9, 3.78975109022698*^9}, {3.789751173557726*^9, 
   3.789751176283114*^9}, {3.7897512630731373`*^9, 3.789751265639409*^9}, {
   3.789751882670229*^9, 3.78975188687558*^9}, {3.7897519413410177`*^9, 
   3.789751944794292*^9}, {3.789752176573017*^9, 3.7897521815866747`*^9}, {
   3.789753684899097*^9, 3.7897537225927677`*^9}, {3.7897537645447493`*^9, 
   3.789753780526716*^9}, {3.7897538176424637`*^9, 3.789753820596141*^9}, {
   3.7903425433015614`*^9, 3.790342633317213*^9}, {3.790342683198593*^9, 
   3.790342738754307*^9}, {3.7903428221002502`*^9, 3.7903428235218143`*^9}, {
   3.791819048569312*^9, 3.791819061867815*^9}, {3.7920663280116*^9, 
   3.792066398207364*^9}, {3.792066438128972*^9, 3.792066446486059*^9}, {
   3.7957699425306597`*^9, 3.795769942636187*^9}, {3.795773514607808*^9, 
   3.795773535356853*^9}, {3.7957735678040247`*^9, 3.795773593325869*^9}, {
   3.7957931220210857`*^9, 3.795793123856614*^9}, {3.795793211081002*^9, 
   3.7957932553407087`*^9}, {3.796631731897415*^9, 3.796631769274466*^9}, 
   3.79663183395258*^9, {3.796748775783658*^9, 3.796748776224491*^9}, {
   3.796751378175907*^9, 3.796751379078167*^9}, {3.796754139695552*^9, 
   3.796754245871038*^9}, {3.79675431709022*^9, 3.7967543263444843`*^9}, {
   3.796754394403034*^9, 3.796754413900003*^9}, 3.7967544560829353`*^9, {
   3.796754494623136*^9, 3.7967545102716627`*^9}, {3.796754620823597*^9, 
   3.796754680292632*^9}, {3.796754769231398*^9, 3.7967547754173927`*^9}, {
   3.79675489269385*^9, 3.79675491661053*^9}, 3.7967550202853403`*^9, {
   3.79675506654436*^9, 3.796755070327755*^9}, {3.796755106328495*^9, 
   3.79675510667775*^9}, {3.7967551799627132`*^9, 3.7967552165510883`*^9}, {
   3.796755254137691*^9, 3.796755305170013*^9}, 3.796755406568736*^9, {
   3.796755461040575*^9, 3.7967554624795427`*^9}, {3.796755619238346*^9, 
   3.796755636444804*^9}, {3.796755673085299*^9, 3.796755710846142*^9}, {
   3.796755784916497*^9, 3.79675578677107*^9}, {3.7967558244810877`*^9, 
   3.7967558414783707`*^9}, {3.8054441870098267`*^9, 3.80544420447403*^9}, {
   3.805444374870788*^9, 3.805444375764859*^9}, {3.805445343585314*^9, 
   3.805445401696575*^9}, 3.805445440246611*^9, {3.8054457349995747`*^9, 
   3.805445736725672*^9}, {3.805445822202217*^9, 3.805445950680936*^9}, 
   3.805445984547834*^9, {3.805446097784149*^9, 3.8054461079048843`*^9}, {
   3.805446139480856*^9, 3.8054461468313513`*^9}, {3.8054462038638687`*^9, 
   3.805446211145911*^9}, 3.805446527874833*^9, {3.805446595476676*^9, 
   3.805446743330783*^9}, {3.805446786872472*^9, 3.80544680078969*^9}, {
   3.805446913163855*^9, 3.805446915050928*^9}, {3.8054469670321417`*^9, 
   3.805446989293201*^9}, {3.80544707188993*^9, 3.805447209104932*^9}, {
   3.805447286311077*^9, 3.8054472917801523`*^9}, {3.805447343874848*^9, 
   3.805447359282918*^9}, {3.8054474256953297`*^9, 3.8054474337730618`*^9}, {
   3.805447914143951*^9, 3.805447915639826*^9}, {3.805447958213299*^9, 
   3.805448107294593*^9}, {3.8054483748463163`*^9, 3.805448382326394*^9}, {
   3.805448417803411*^9, 3.805448440932177*^9}, {3.805448531981903*^9, 
   3.80544853414835*^9}, {3.805449605665516*^9, 3.80544961196176*^9}, {
   3.805449657622038*^9, 3.8054496854521646`*^9}, {3.805449724344417*^9, 
   3.805449842531801*^9}, {3.805449880226646*^9, 3.805449902031508*^9}, {
   3.805450029376549*^9, 3.805450034774527*^9}, 3.805450090941428*^9, {
   3.805450233181858*^9, 
   3.8054502757057467`*^9}},ExpressionUUID->"32ce115c-50fe-45c2-b8e4-\
1347f02d6ecf"],

Cell["\<\
This function decompose a matrix in L as a product of A\[CloseCurlyQuote]s \
and B\[CloseCurlyQuote]s returns result as {{a1,a2,..,ak},{b1,b2,..,ak}} \
where (A^(a1)B^(b1)...A^(ak)B^(bk)). This method is recursive loop until we \
end up back into the fundamental domain of Gamma(2) which we always will \
since L is a subset of it. \
\>", "Text",
 CellChangeTimes->{{3.805444464151272*^9, 3.805444587907222*^9}, {
   3.8054475910451107`*^9, 3.8054476674074802`*^9}, 3.805447968015347*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b4c6bd58-957a-4875-988e-a5cdf908d9ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Decomposition", "[", "inputMatrix_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AValues", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"BValues", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"back", "=", "False"}], ",", 
      RowBox[{"first", "=", "0"}], ",", "babyn", ",", 
      RowBox[{"pt", "=", 
       RowBox[{"ReIm", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"inputMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", "I"}], "+", 
           RowBox[{"inputMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"inputMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "*", "I"}], "+", 
           RowBox[{"inputMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}]}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", "back"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Testing", " ", "to", " ", "see", " ", "if", " ", "we", " ", "are", 
         " ", "in", " ", "the", " ", "fundamental", " ", "domain"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "\[LessEqual]", 
           RowBox[{"pt", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pt", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"pt", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], ">", 
           RowBox[{"1", "/", "4"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pt", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"pt", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], ">", 
           RowBox[{"1", "/", "4"}]}]}], ",", 
         RowBox[{"back", "=", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "\[LessEqual]", 
            RowBox[{"pt", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"first", "\[Equal]", "0"}], ",", 
              RowBox[{"first", "=", "2"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "The", " ", "minimal", " ", "of", " ", "the", " ", "polynomial",
                " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "nx"}], "+", "1"}], ")"}], "^", "2"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"n", "^", "2"}], 
               RowBox[{"y", "^", "2"}], " ", "in", " ", "terms", " ", "of", 
               " ", "n", " ", "so", " ", "we", " ", "can", " ", "get", " ", 
               "the", " ", "highest", " ", "height"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"babyn", "=", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"pt", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"pt", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"pt", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], ")"}]}], 
                ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pt", "=", 
             RowBox[{"matrixB", "[", 
              RowBox[{"pt", ",", "babyn"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"BValues", ",", "babyn"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"first", "\[Equal]", "0"}], ",", 
              RowBox[{"first", "=", "1"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Finds", " ", "the", " ", "only", " ", "n", " ", "that", " ", 
               "gets", " ", "us", " ", "back", " ", "into", " ", "our", " ", 
               "fundamental", " ", "domain", " ", "via", " ", "shifts", " ", 
               "by", " ", "2", " ", "or"}], " ", "-", "2"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"babyn", "=", 
             RowBox[{
              RowBox[{"FindInstance", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "\[LessEqual]", 
                 RowBox[{
                  RowBox[{"pt", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"2", "n"}]}], "\[LessEqual]", "1"}], ",", "n", ",", 
                "Integers"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pt", "=", 
             RowBox[{"matrixA", "[", 
              RowBox[{"pt", ",", "babyn"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"AValues", ",", "babyn"}], "]"}]}]}], "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"this", " ", "returns", " ", "the", " ", 
        RowBox[{"A", "'"}], "s", " ", "and", " ", 
        RowBox[{"B", "'"}], "s", " ", "but", " ", "the", " ", "negative", " ",
         "is", " ", "to", " ", "reflect", " ", "the", " ", "inverses", " ", 
        "that", " ", "needed", " ", "to", " ", "be", " ", "taken", " ", "to", 
        " ", "move", " ", "them", " ", "from", " ", 
        RowBox[{"f1", ".", "f2", ".", "f3"}], " ", "M"}], " ", "=", " ", 
       RowBox[{"I", " ", "to", " ", "the", " ", "otherside"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AValues", "=", 
      RowBox[{"-", "AValues"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BValues", "=", 
      RowBox[{"-", "BValues"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"first", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Force", " ", "it", " ", "to", " ", "actually", " ", "start", " ", 
          "with", " ", "an", " ", "A"}], ",", " ", 
         RowBox[{"not", " ", "a", " ", "B"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"first", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"BValues", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], "}"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"BValues", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"BValues", "[", 
             RowBox[{"2", ";;", 
              RowBox[{"Length", "[", "BValues", "]"}]}], "]"}], ",", 
            RowBox[{"BValues", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"AValues", ",", "BValues", ",", "first"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQzazMdOWW9RvHbdd2XAXRBu8Tb4NoLnnPOyBaZLHO
QzDNIf8URNfMnX32JZCOWj8PTE9R6DotavPG8daTOfdB9I+eo0fDgXSBQt4x
EP0sPW4rk9MbxwqtyL0gepObvK5/1BtHpe0mYHrT0eB5IPpQi/0CEL3g/My3
IPpFpPh3ED3DNJcpAEibFZ1jA9EGFfOlQDTjRj55EK1i9WU/iFbj/XMARMtV
Z58B0RVPs86C6MPSfJdA9I8dYrdBNM/X/z9B9D1PN6FAIC32+oQqiObgfagN
oieksxmDaJ6mXjMQ3Wif5AiiXc7ngul57rrzQfQGSwswDQC475mR
  
  "],ExpressionUUID->"59ff5baf-3d7f-415a-9531-7f73fbeeb4dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The code to be ran to find information on a set of trace in L and saves it to \
an CSV \
\>", "Section",
 CellChangeTimes->{{3.7936182018321543`*^9, 3.793618208554514*^9}, {
  3.795194540198556*^9, 3.795194544803287*^9}, {3.795518435303845*^9, 
  3.7955184423136053`*^9}, {3.805444606587161*^9, 3.805444611689629*^9}, {
  3.805444656488049*^9, 3.8054446859344673`*^9}, {3.805450483419145*^9, 
  3.805450484883196*^9}},ExpressionUUID->"1fe2fb06-de83-421f-b76a-\
45dc3d746ed1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportingcsv", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795196250249918*^9, 3.795196289509342*^9}, {
  3.795198917239216*^9, 3.7951989175400963`*^9}, {3.795518425598955*^9, 
  3.795518427291391*^9}, {3.795814923220586*^9, 3.795814935624864*^9}, {
  3.795815161478837*^9, 3.795815164150723*^9}, {3.797863799822261*^9, 
  3.797863802297103*^9}, {3.7978641729590054`*^9, 3.797864190452713*^9}, {
  3.797864534800506*^9, 3.797864535888282*^9}, {3.805444690822179*^9, 
  3.805444698382195*^9}},ExpressionUUID->"caf8bcb6-d510-4a1c-98f7-\
0540e48748e9"],

Cell["Runs through all the possible traces", "Text",
 CellChangeTimes->{{3.805444723439695*^9, 3.805444726500208*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"56ad80fc-6d28-4ed6-b03b-a02bcff1bf55"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "18"}], ",", " ", 
     RowBox[{"i", "<", 
      RowBox[{"9", "*", "256", "*", "7"}]}], ",", " ", 
     RowBox[{"i", "=", 
      RowBox[{"i", "+", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"traceValue", "=", "i"}], ";", "\[IndentingNewLine]", 
      RowBox[{"admissible", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "makes", " ", "sure", " ", "that", " ", "the", " ", "trace", " ", "is",
         " ", "in", " ", "L", " ", "at", " ", "least"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "16"}], "]"}], "\[Equal]", "2"}], "||", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"-", "i"}], ",", "16"}], "]"}], "\[Equal]", "2"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", "16"}], "]"}], "\[Equal]", "2"}], ",", 
           
           RowBox[{"traceValue", "=", 
            RowBox[{"-", "i"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "18", ",", " ", "66", ",", " ", "146"}],
                "}"}], ",", " ", 
              RowBox[{"Mod", "[", 
               RowBox[{"traceValue", ",", " ", "256"}], "]"}]}], "]"}], "&&", 
            
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0", ",", " ", "2", ",", " ", "3", ",", " ", "6", ",", "7"}], 
               "}"}], ",", " ", 
              RowBox[{"Mod", "[", 
               RowBox[{"traceValue", ",", " ", "9"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"admissible", "=", "True"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "find", " ", "the", " ", "representatives", " ", "of", " ", "the", 
           " ", "conjugacy", " ", "classes"}], "*)"}], "\[IndentingNewLine]", 
         
         RowBox[{"listofPossibilities", "=", 
          RowBox[{"BQF", "[", "traceValue", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "loop", " ", "through", " ", "all", " ", "of", " ", "the", " ", 
           "conjugacy", " ", "classes", " ", "we", " ", "have", " ", "and", 
           " ", "record", " ", "the", " ", "results"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", 
             RowBox[{"listofPossibilities", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"decomp", "=", 
             RowBox[{
              RowBox[{"listofPossibilities", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "j"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"distanceTraveled", "=", 
             RowBox[{"Total", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Abs", "[", "decomp", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "how", " ", "far", " ", "from", " ", "the", " ", "orgin", " ", 
               "did", " ", "we", " ", "end", " ", "up"}], ",", " ", 
              RowBox[{
              "if", " ", "the", " ", "answer", " ", "is", " ", "we", " ", 
               "are", " ", "still", " ", "at", " ", "the", " ", "orgin", " ", 
               "then", " ", "it", " ", "is", " ", "an", " ", "element", " ", 
               "of", " ", "the", " ", "conjugacy", " ", "class"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"currentPoint", "=", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", " ", 
              RowBox[{"k", "\[LessEqual]", 
               RowBox[{"Length", "[", 
                RowBox[{"decomp", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"currentPoint", "=", 
               RowBox[{"currentPoint", "+", 
                RowBox[{
                 RowBox[{"decomp", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "k"}], "]"}], "]"}], 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}], "+", 
                RowBox[{
                 RowBox[{"decomp", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "k"}], "]"}], "]"}], 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"x", ",", " ", 
              RowBox[{"y", " ", "that", " ", "we", " ", "end", " ", "at"}]}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"exportingcsv", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "admissible", ",", " ", 
                RowBox[{"listofPossibilities", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "j"}], "]"}], "]"}], ",", " ", 
                RowBox[{"listofPossibilities", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "j"}], "]"}], "]"}], ",", " ", 
                "distanceTraveled", ",", " ", "currentPoint"}], "}"}]}], 
             "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], ",", "i"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795194777845525*^9, 3.795195236697941*^9}, {
   3.795195275543024*^9, 3.795195298851554*^9}, {3.795195338657702*^9, 
   3.7951957785258837`*^9}, {3.795195840004554*^9, 3.79519584932927*^9}, {
   3.79519602527724*^9, 3.795196246765153*^9}, {3.795196302677845*^9, 
   3.795196396321816*^9}, {3.7951964349057617`*^9, 3.795196448126563*^9}, {
   3.795196679278904*^9, 3.7951966840915813`*^9}, {3.795196747657655*^9, 
   3.795196777604929*^9}, {3.795196810828203*^9, 3.795196830860673*^9}, {
   3.795198196718865*^9, 3.79519822943963*^9}, {3.795198269905635*^9, 
   3.7951982752790422`*^9}, 3.795198336703264*^9, {3.7951989220576897`*^9, 
   3.795198966494761*^9}, {3.7954522114719543`*^9, 3.795452215550415*^9}, {
   3.795460051744048*^9, 3.7954600589745693`*^9}, {3.795801397183962*^9, 
   3.7958014257969503`*^9}, {3.7958135795264387`*^9, 3.795813580115818*^9}, {
   3.795814173595145*^9, 3.7958142349815693`*^9}, {3.7958143072798433`*^9, 
   3.795814314201681*^9}, {3.795814976925536*^9, 3.795814984011807*^9}, {
   3.795815018633994*^9, 3.795815025689309*^9}, {3.795815071798852*^9, 
   3.795815158011354*^9}, {3.795815854804285*^9, 3.7958158561967497`*^9}, {
   3.795817039460455*^9, 3.795817042118827*^9}, {3.7958171037885923`*^9, 
   3.795817105475775*^9}, {3.795817136406954*^9, 3.795817230838297*^9}, {
   3.7958173899246807`*^9, 3.795817421269607*^9}, {3.795817693652457*^9, 
   3.795817706808881*^9}, {3.7958177619143257`*^9, 3.795817770592471*^9}, {
   3.7958681565212107`*^9, 3.795868200231833*^9}, {3.796063642708747*^9, 
   3.79606364417414*^9}, {3.7963802760499496`*^9, 3.796380279174281*^9}, 
   3.796380398344489*^9, {3.796756065184289*^9, 3.796756096628025*^9}, {
   3.796756196000284*^9, 3.796756204310194*^9}, {3.7967562524927807`*^9, 
   3.796756330221218*^9}, {3.796769099068098*^9, 3.796769144233844*^9}, {
   3.796769328534588*^9, 3.7967693356239443`*^9}, {3.796769365632874*^9, 
   3.79676938133974*^9}, {3.796769424973097*^9, 3.796769462661744*^9}, {
   3.7967694965356693`*^9, 3.7967695083001842`*^9}, {3.796769632167471*^9, 
   3.7967696393562927`*^9}, {3.796769714761982*^9, 3.7967697809810753`*^9}, {
   3.796769846625305*^9, 3.796769925451501*^9}, {3.7967699921455717`*^9, 
   3.796769995800502*^9}, {3.797863849607801*^9, 3.797863858404051*^9}, {
   3.7978639142253313`*^9, 3.797863946109004*^9}, {3.797863998989788*^9, 
   3.797864011924079*^9}, {3.797864070921315*^9, 3.797864161315364*^9}, {
   3.797864200196138*^9, 3.7978642385590553`*^9}, 3.7978642783076763`*^9, {
   3.797864315276499*^9, 3.7978643808353367`*^9}, {3.7978644112653303`*^9, 
   3.797864451426342*^9}, {3.797864493825884*^9, 3.797864528140966*^9}, {
   3.797864569407466*^9, 3.797864577146028*^9}, {3.7978647641721363`*^9, 
   3.797864887874146*^9}, {3.797865196146943*^9, 3.7978652661334763`*^9}, {
   3.797866012931888*^9, 3.797866030707788*^9}, {3.7978663884745073`*^9, 
   3.797866392775457*^9}, {3.797866473365055*^9, 3.7978664993217278`*^9}, {
   3.797878024083047*^9, 3.797878056692083*^9}, {3.797981696684916*^9, 
   3.797981700314221*^9}, {3.7979817354571857`*^9, 3.797981751285634*^9}, {
   3.805060732666834*^9, 3.805060755485669*^9}, {3.805061416597187*^9, 
   3.805061428773604*^9}, {3.8051376229072123`*^9, 3.805137628624958*^9}, {
   3.805366236301091*^9, 3.805366265799662*^9}, {3.805444709395898*^9, 
   3.805444776047697*^9}, {3.805445760050194*^9, 3.8054457600984488`*^9}, 
   3.805446228717452*^9, {3.805448743071381*^9, 3.805448753877039*^9}, {
   3.805448797507803*^9, 3.8054488892776117`*^9}, {3.805448921781546*^9, 
   3.80544897211255*^9}, 3.8054490463971443`*^9, {3.805449077609288*^9, 
   3.805449289287157*^9}, {3.805449340914296*^9, 3.805449353009899*^9}, {
   3.805449391969617*^9, 3.8054494360218143`*^9}, {3.8054494960825977`*^9, 
   3.805449537879031*^9}, {3.805450048965098*^9, 3.805450049649377*^9}, {
   3.805450302987092*^9, 3.8054503095141993`*^9}, {3.8054505938437977`*^9, 
   3.8054505976973667`*^9}, {3.805451109557536*^9, 3.805451118755185*^9}, {
   3.805451152358057*^9, 3.8054511774396353`*^9}, {3.805451230719846*^9, 
   3.805451231020875*^9}, {3.805452028256566*^9, 3.805452031957677*^9}, {
   3.805454814119418*^9, 
   3.805454820636155*^9}},ExpressionUUID->"5607e6ac-4ff8-48b6-a708-\
12f54d154566"],

Cell["Save everything as a CSV", "Text",
 CellChangeTimes->{{3.80544646792638*^9, 3.8054464743574867`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"415ab527-864a-4c8a-a0f7-8e7352037085"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<info_on_traces.csv\>\"", ",", " ", "exportingcsv", ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Trace\>\"", ",", "\"\<Admissible\>\"", ",", " ", "\"\<Matrix\>\"", 
       ",", " ", "\"\<Decomposition\>\"", ",", "\"\<Length of Walk\>\"", ",", 
       " ", "\"\<Final Position\>\""}], "}"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7978645614304943`*^9, 3.7978646489461184`*^9}, {
   3.797865271913521*^9, 3.797865274457018*^9}, {3.7978780417953453`*^9, 
   3.797878045585532*^9}, 3.797981286576539*^9, {3.8050606987086763`*^9, 
   3.805060698810522*^9}, 3.805366257129138*^9, {3.805449359165264*^9, 
   3.805449362158188*^9}, {3.805450387011538*^9, 3.805450389529214*^9}, 
   3.8054522703248158`*^9},ExpressionUUID->"fffbb83f-7b12-4168-a9c8-\
1768751e373e"]
}, Open  ]]
},
WindowSize->{1166, 659},
WindowMargins->{{45, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 298, 7, 67, "Section",ExpressionUUID->"043306a0-9781-4e72-aa1f-bbeea750a905"],
Cell[CellGroupData[{
Cell[903, 33, 237, 5, 30, "Input",ExpressionUUID->"02280d87-8050-44ff-a6b5-409269d79bd3"],
Cell[1143, 40, 196, 3, 34, "Output",ExpressionUUID->"168b84c5-5642-45ff-af54-4fde66f84091"]
}, Open  ]],
Cell[1354, 46, 271, 6, 51, "Text",ExpressionUUID->"f26a6b3a-8fa8-43b4-8e4b-4733593ebc37"],
Cell[1628, 54, 4325, 93, 241, "Input",ExpressionUUID->"c17f2649-9b54-4fe2-aa76-06106aee6ffb"],
Cell[5956, 149, 351, 7, 51, "Text",ExpressionUUID->"e6c32250-c33d-4cf2-bcc9-114af72ea00c"],
Cell[6310, 158, 1334, 37, 52, "Input",ExpressionUUID->"760ab3ba-6b06-4c91-aece-36365a14d6ad"],
Cell[7647, 197, 359, 7, 51, "Text",ExpressionUUID->"88635891-aa1f-4ed4-87f9-31c566fa1550"],
Cell[8009, 206, 20365, 395, 1039, "Input",ExpressionUUID->"32ce115c-50fe-45c2-b8e4-1347f02d6ecf"],
Cell[28377, 603, 594, 10, 74, "Text",ExpressionUUID->"b4c6bd58-957a-4875-988e-a5cdf908d9ba"],
Cell[28974, 615, 8880, 220, 556, "Input",ExpressionUUID->"59ff5baf-3d7f-415a-9531-7f73fbeeb4dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37891, 840, 485, 9, 67, "Section",ExpressionUUID->"1fe2fb06-de83-421f-b76a-45dc3d746ed1"],
Cell[38379, 851, 610, 11, 30, "Input",ExpressionUUID->"caf8bcb6-d510-4a1c-98f7-0540e48748e9"],
Cell[38992, 864, 214, 3, 51, "Text",ExpressionUUID->"56ad80fc-6d28-4ed6-b03b-a02bcff1bf55"],
Cell[39209, 869, 10610, 208, 493, "Input",ExpressionUUID->"5607e6ac-4ff8-48b6-a708-12f54d154566"],
Cell[49822, 1079, 203, 3, 51, "Text",ExpressionUUID->"415ab527-864a-4c8a-a0f7-8e7352037085"],
Cell[50028, 1084, 879, 16, 52, "Input",ExpressionUUID->"fffbb83f-7b12-4168-a9c8-1768751e373e"]
}, Open  ]]
}
]
*)

